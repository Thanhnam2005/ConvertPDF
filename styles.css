:root {
    --primary-color: #4a90e2;
    --secondary-color: #f39c12;
    --text-color: #333;
    --bg-color: #f4f4f4;
    --white: #ffffff;
}

body {
    font-family: 'Poppins', sans-serif;
    line-height: 1.6;
    color: var(--text-color);
    background-color: var(--bg-color);
    margin: 0;
    padding: 0;
}

.container {
    width: 90%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
}

header {
    background-color: var(--white);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    padding: 1rem 0;
}

header .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

header h1 {
    color: var(--primary-color);
    margin: 0;
}

#themeToggle {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
}

.hero {
    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
    color: var(--white);
    text-align: center;
    padding: 4rem 0;
}

.hero h2 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
}

.cta-button {
    display: inline-block;
    background-color: var(--white);
    color: var(--primary-color);
    padding: 0.8rem 2rem;
    border-radius: 50px;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
}

.cta-button:hover {
    background-color: var(--primary-color);
    color: var(--white);
}

.features {
    padding: 4rem 0;
}

.feature-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
}

.feature-item {
    background-color: var(--white);
    padding: 2rem;
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    text-align: center;
    transition: transform 0.3s ease;
}

.feature-item:hover {
    transform: translateY(-5px);
}

.feature-item i {
    font-size: 3rem;
    color: var(--primary-color);
    margin-bottom: 1rem;
}

.converter {
    padding: 4rem 0;
    background-color: var(--white);
}

.converter-container {
    background-color: var(--bg-color);
    padding: 2rem;
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

.drop-zone {
    border: 2px dashed var(--primary-color);
    border-radius: 10px;
    padding: 2rem;
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
}

.drop-zone:hover, .drop-zone.drag-over {
    background-color: rgba(74, 144, 226, 0.1);
}

.drop-zone i {
    font-size: 3rem;
    color: var(--primary-color);
    margin-bottom: 1rem;
}

.image-preview {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-top: 1rem;
}

.image-preview img {
    max-width: 100px;
    max-height: 100px;
    object-fit: cover;
    border-radius: 5px;
}

.convert-button, .download-button {
    display: inline-block;
    background-color: var(--primary-color);
    color: var(--white);
    padding: 0.8rem 2rem;
    border: none;
    border-radius: 50px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s ease;
    margin-top: 1rem;
}

.convert-button:hover, .download-button:hover {
    background-color: var(--secondary-color);
}

.testimonials {
    padding: 4rem 0;
    background-color: var(--bg-color);
}

.testimonial-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
}

.testimonial-item {
    background-color: var(--white);
    padding: 2rem;
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

.testimonial-item .author {
    font-weight: 600;
    margin-top: 1rem;
}

footer {
    background-color: var(--primary-color);
    color: var(--white);
    padding: 3rem 0 1rem;
}

.footer-content {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 2rem;
    margin-bottom: 2rem;
}

.footer-section h3, .footer-section h4 {
    margin-bottom: 1rem;
}

.footer-section ul {
    list-style: none;
    padding: 0;
}

.footer-section ul li {
    margin-bottom: 0.5rem;
}

.footer-section a {
    color: var(--white);
    text-decoration: none;
}

.footer-bottom {
    text-align: center;
    padding-top: 2rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
}

@media (max-width: 768px) {
    .hero h2 {
        font-size: 2rem;
    }

    .feature-grid, .testimonial-grid {
        grid-template-columns: 1fr;
    }

    .footer-content {
        grid-template-columns: 1fr;
    }
}

/* Dark mode styles */
body.dark-mode {
    --text-color: #f4f4f4;
    --bg-color: #333;
    --white: #1a1a1a;
}

body.dark-mode header {
    background-color: #1a1a1a;
}

body.dark-mode .feature-item,
body.dark-mode .converter-container,
body.dark-mode .testimonial-item {
    background-color: #2a2a2a;
    color: var(--text-color);
}

body.dark-mode .drop-zone {
    border-color: var(--primary-color);
}

body.dark-mode .drop-zone:hover,
body.dark-mode .drop-zone.drag-over {
    background-color: rgba(74, 144, 226, ```

```javascript file="script.js"
document.addEventListener('DOMContentLoaded', function() {
    const dropZone = document.getElementById('drop-zone');
    const fileInput = document.getElementById('file-input');
    const imagePreview = document.getElementById('image-preview');
    const convertBtn = document.getElementById('convert-btn');
    const pdfDownload = document.getElementById('pdf-download');
    const downloadLink = document.getElementById('download-link');
    const themeToggle = document.getElementById('themeToggle');

    let uploadedImages = [];

    // Theme toggle functionality
    themeToggle.addEventListener('click', () => {
        document.body.classList.toggle('dark-mode');
        themeToggle.textContent = document.body.classList.contains('dark-mode') ? '☀️' : '🌙';
    });

    // File drop and selection functionality
    dropZone.addEventListener('click', () => fileInput.click());
    dropZone.addEventListener('dragover', (e) => {
        e.preventDefault();
        dropZone.classList.add('drag-over');
    });
    dropZone.addEventListener('dragleave', () => dropZone.classList.remove('drag-over'));
    dropZone.addEventListener('drop', handleDrop);
    fileInput.addEventListener('change', handleFileSelect);
    convertBtn.addEventListener('click', convertToPdf);

    function handleDrop(e) {
        e.preventDefault();
        dropZone.classList.remove('drag-over');
        const files = e.dataTransfer.files;
        handleFiles(files);
    }

    function handleFileSelect(e) {
        const files = e.target.files;
        handleFiles(files);
    }

    function handleFiles(files) {
        uploadedImages = [...uploadedImages, ...Array.from(files)];
        updateImagePreview();
    }

    function updateImagePreview() {
        imagePreview.innerHTML = '';
        uploadedImages.forEach((file, index) => {
            const img = document.createElement('img');
            img.src = URL.createObjectURL(file);
            img.onload = () => URL.revokeObjectURL(img.src);
            
            const imgContainer = document.createElement('div');
            imgContainer.className = 'image-container';
            imgContainer.appendChild(img);
            
            const removeBtn = document.createElement('button');
            removeBtn.textContent = '✕';
            removeBtn.className = 'remove-btn';
            removeBtn.onclick = () => removeFile(index);
            imgContainer.appendChild(removeBtn);
            
            imagePreview.appendChild(imgContainer);
        });
        convertBtn.style.display = uploadedImages.length > 0 ? 'inline-block' : 'none';
    }

    function removeFile(index) {
        uploadedImages.splice(index, 1);
        updateImagePreview();
    }

    function convertToPdf() {
        if (uploadedImages.length === 0) return;

        const pdf = new jspdf.jsPDF();
        
        let processedImages = 0;
        uploadedImages.forEach((file, index) => {
            const img = new Image();
            img.src = URL.createObjectURL(file);
            img.onload = () => {
                const imgWidth = pdf.internal.pageSize.getWidth();
                const imgHeight = (img.height * imgWidth) / img.width;
                
                if (index > 0) {
                    pdf.addPage();
                }
                
                pdf.addImage(img, 'JPEG', 0, 0, imgWidth, imgHeight);
                
                processedImages++;
                if (processedImages === uploadedImages.length) {
                    const pdfBlob = pdf.output('blob');
                    const pdfUrl = URL.createObjectURL(pdfBlob);
                    downloadLink.href = pdfUrl;
                    pdfDownload.style.display = 'block';
                }
            };
        });
    }

    // Smooth scrolling for navigation links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            document.querySelector(this.getAttribute('href')).scrollIntoView({
                behavior: 'smooth'
            });
        });
    });
});

